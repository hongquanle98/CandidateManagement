@model InterviewScheduleListViewModel

@inject IOperatorRepository operatorRepository
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject IInterviewResultRepository interviewResultRepository
@inject IInterviewScheduleRepository interviewScheduleRepository

@{
    ViewData["Title"] = "Interview Schedule";
}
<div class="card">
    <div class="card-header bg-info text-white">Interview Schedule</div>
    <div class="card-body">
        <div class="card-text">
            <form class="mx-auto form-inline my-3" method="post" id="filterForm">
                <div class="form-group">
                    <label asp-for="FromDate">From Date</label>
                    <input asp-for="FromDate" class="form-control form-control-sm mx-3" type="date" id="fromDate">
                </div>
                <div class="form-group">
                    <label asp-for="ToDate">To Date</label>
                    <input asp-for="ToDate" class="form-control form-control-sm mx-3" type="date" id="toDate">
                </div>
                @*<div class="form-group">
                        <label asp-for="Status">Status</label>
                        <select asp-for="Status" class="form-control form-control-sm mx-3">
                            <option value="All" selected>All</option>
                            <optgroup label="CV Status">
                                <option value="CVPending">CV Pending</option>
                                <option value="CVPassed">CV Passed</option>
                                <option value="CVFailed">CV Failed</option>
                            </optgroup>

                            <optgroup label="Interview Status">
                                <option value="InterviewNotScheduled">Interview Not Scheduled</option>
                                <option value="InterviewPassed">Interview Passed</option>
                                <option value="InterviewFailed">Interview Failed</option>
                            </optgroup>
                        </select>
                    </div>*@
                <div class="form-group">
                    <button type="submit" class="btn btn-sm btn-outline-primary mx-3">Filter</button>
                    <a asp-controller="Admin" asp-action="ApplyDetailList">Clear</a>
                </div>
            </form>

            <table class="table table-bordered table-hover w-100 table-sm">
                <thead>
                    <tr>
                        <th>Candidate Name</th>
                        <th>Interview Date</th>
                        <th>Interview Time</th>
                        <th>Operator</th>
                        <th>Email Sent</th>
                        <th>Action</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var interviewSchedule in Model.InterviewSchedules)
                    {
                        bool canMarkAbility = false;
                        var candidate = interviewSchedule.ApplyDetail.Apply.Candidate;
                        var operators = interviewResultRepository.GetInterviewResultByInterviewID(interviewSchedule.InterviewId).Select(ir => ir.Operator).GroupBy(o => o.OperatorId).Select(o => o.First());
                        var signedInOperator = operatorRepository.GetOperator(UserManager.GetUserId(User));
                        if (signedInOperator != null)
                        {
                            var irOfOperator = interviewResultRepository.GetInterviewResultByInterviewID(interviewSchedule.InterviewId).Where(ir => ir.OperatorId == signedInOperator.OperatorId);
                            if (irOfOperator.Any() && interviewSchedule.IsInterviewPass == null)
                            {
                                canMarkAbility = true;
                            }
                        }
                        var lastInterview = interviewScheduleRepository.GetInterviewScheduleByApplyDetailId(interviewSchedule.ApplyDetail.ApplyDetailId).LastOrDefault();
                        var hasMarkedAbility = !interviewResultRepository.GetInterviewResultByInterviewID(interviewSchedule.InterviewId).Any(ir => ir.Point == 0);
                        var canEvaluate = hasMarkedAbility && User.IsInRole("Manager") && lastInterview.InterviewId == interviewSchedule.InterviewId;
                        bool canDelete = !hasMarkedAbility && interviewSchedule.IsInterviewPass == null;
                        <tr>
                            <td>@candidate.FullName</td>
                            <td>@FormatHelper.FormatDate(interviewSchedule.InterviewDate)</td>
                            <td>@string.Format("{0:hh\\:mm}", interviewSchedule.InterviewTime)</td>
                            <td>
                                @foreach (var op in operators)
                                {
                                    bool hasMarkedAllAbility = !interviewResultRepository.GetInterviewResultByInterviewIDAndOperatorID(interviewSchedule.InterviewId, op.OperatorId).Where(ir => ir.Point == 0).Any();
                                    <span class="badge @(hasMarkedAllAbility ? "badge-dark" : "badge-light")" title="@(hasMarkedAllAbility ? "All ability were marked" : "Not mark all ability")">
                                        @op.OperatorName
                                    </span>
                                }
                            </td>
                            <td class="text-center">
                                @if (interviewSchedule.IsEmailSent == true)
                                {
                                    <p class="badge badge-success d-block">Yes</p>
                                }
                                else
                                {
                                    <p class="badge badge-danger d-block">No</p>
                                }
                            </td>
                            <td class="text-center">
                                <div class="d-flex justify-content-center">
                                    <button class="btn btn-link text-primary font-weight-bold btn-sm" onclick="ShowMarkAbilityModal(@interviewSchedule.ApplyDetail.ApplyDetailId, @interviewSchedule.InterviewId);" disabled="@(!canMarkAbility)">Mark Ability</button>

                                    <button class="btn btn-link text-info font-weight-bold btn-sm" onclick="ShowEditInterviewModal(@interviewSchedule.ApplyDetail.ApplyDetailId, @interviewSchedule.InterviewId);">Edit</button>

                                    <form class="mx-1" asp-controller="Admin" asp-action="DeleteInterview" asp-route-id="@interviewSchedule.InterviewId" method="post">
                                        <button class="btn btn-link text-danger font-weight-bold btn-sm" type="submit" onclick="return confirm('Are you sure?');" disabled="@(!canDelete)">Delete</button>
                                    </form>
                                </div>
                            </td>
                            <td class="text-center">
                                @{
                                    if (interviewSchedule.IsInterviewPass == null)
                                    {
                                        <div>
                                            <p class="badge badge-primary my-auto d-block">@(hasMarkedAbility ? "Not Evaluate" : "Not Mark All Ability")</p>
                                            @if (canEvaluate && hasMarkedAbility)
                                            {
                                                <form class="d-inline" asp-controller="Admin" asp-action="UpdateInterviewStatus" asp-route-id="@interviewSchedule.InterviewId" asp-route-status="pass" method="post">
                                                    <a class="text-success font-weight-bold small" href="#" onclick="this.parentNode.submit(); return false;">Pass</a>
                                                </form>
                                                <form class="d-inline" asp-controller="Admin" asp-action="UpdateInterviewStatus" asp-route-id="@interviewSchedule.InterviewId" asp-route-status="fail" method="post">
                                                    <a class="text-danger font-weight-bold small" href="#" onclick="this.parentNode.submit(); return false;">Fail</a>
                                                </form>
                                            }

                                        </div>
                                    }
                                    if (interviewSchedule.IsInterviewPass == true)
                                    {
                                        <div>
                                            <p class="badge badge-success my-auto d-block">Passed</p>
                                            @if (canEvaluate)
                                            {
                                                <form class="d-inline" asp-controller="Admin" asp-action="UpdateInterviewStatus" asp-route-id="@interviewSchedule.InterviewId" asp-route-status="fail" method="post">
                                                    <a class="text-danger font-weight-bold small" href="#" onclick="this.parentNode.submit(); return false;">Fail</a>
                                                </form>
                                                <form class="d-inline" asp-controller="Admin" asp-action="UpdateInterviewStatus" asp-route-id="@interviewSchedule.InterviewId" asp-route-status="null" method="post">
                                                    <a class="text-info font-weight-bold small" href="#" onclick="this.parentNode.submit(); return false;">Reset</a>
                                                </form>
                                            }

                                        </div>
                                    }
                                    if (interviewSchedule.IsInterviewPass == false)
                                    {
                                        <div>
                                            <p class="badge badge-danger my-auto d-block">Failed</p>
                                            @if (canEvaluate)
                                            {
                                                <form class="d-inline" asp-controller="Admin" asp-action="UpdateInterviewStatus" asp-route-id="@interviewSchedule.InterviewId" asp-route-status="pass" method="post">
                                                    <a class="text-success font-weight-bold small" href="#" onclick="this.parentNode.submit(); return false;">Pass</a>
                                                </form>
                                                <form class="d-inline" asp-controller="Admin" asp-action="UpdateInterviewStatus" asp-route-id="@interviewSchedule.InterviewId" asp-route-status="null" method="post">
                                                    <a class="text-info font-weight-bold small" href="#" onclick="this.parentNode.submit(); return false;">Reset</a>
                                                </form>
                                            }
                                        </div>
                                    }
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

