@model ScheduleHistoryViewModel
@inject IInterviewResultRepository interviewResultRepository
@inject IOperatorRepository operatorRepository
@inject IInterviewScheduleRepository interviewScheduleRepository
@inject IApplyDetailAbilityRepository applyDetailAbilityRepository
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    ViewData["Title"] = "ScheduleHistory";
    var lastInterview = interviewScheduleRepository.GetInterviewScheduleByApplyDetailId(Model.ApplyDetail.ApplyDetailId).LastOrDefault();
}
<h3>Schedule History</h3>
<div class="card-group">
    @await Html.PartialAsync("_CandidateInfoPartial", Model.Candidate)

    <input type="hidden" asp-for="@Model.ApplyDetail.ApplyDetailId" />
    <div class="w-100 my-1"></div>
    <div class="card">
        <div class="card-header bg-info text-white">Schedule History</div>
        <div class="card-body">
            <button class="btn btn-outline-primary btn-sm mb-3" onclick="ShowAddInterviewModal(@Model.ApplyDetail.ApplyDetailId);" disabled="@(lastInterview != null && lastInterview.IsInterviewPass != false)">Add New Interview Schedule</button>
            <div class="card-text">
                @if (Model.InterviewSchedules.Count() > 0)
                {
                    <table class="table table-bordered table-hover w-100 table-sm" id="interviewScheduleListTable">
                        <thead>
                            <tr>
                                <th>Interview Date</th>
                                <th>Interview Time</th>
                                <th>Operator</th>
                                <th>Email Sent</th>
                                <th>Action</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var interviewSchedule in Model.InterviewSchedules)
                            {
                                bool canMarkAbility = false;
                                var operators = interviewResultRepository.GetInterviewResultByInterviewID(interviewSchedule.InterviewId).Select(ir => ir.Operator).GroupBy(o => o.OperatorId).Select(o => o.First());
                                var applyDetailAbilities = applyDetailAbilityRepository.GetApplyDetailAbility(interviewSchedule.ApplyDetailId).OrderBy(ada => ada.ApplyDetailAbilityId);
                                var signedInOperator = operatorRepository.GetOperator(UserManager.GetUserId(User));
                                if (signedInOperator != null)
                                {
                                    var irOfOperator = interviewResultRepository.GetInterviewResultByInterviewID(interviewSchedule.InterviewId).Where(ir => ir.OperatorId == signedInOperator.OperatorId);
                                    if (irOfOperator.Any() && interviewSchedule.IsInterviewPass == null)
                                    {
                                        canMarkAbility = true;
                                    }
                                }
                                bool hasMarkedAbility = !interviewResultRepository.GetInterviewResultByInterviewID(interviewSchedule.InterviewId).Any(ir => ir.Point == 0);
                                bool canEvaluate = hasMarkedAbility && User.IsInRole("Manager") && lastInterview.InterviewId == interviewSchedule.InterviewId;
                                bool canDelete = !hasMarkedAbility && interviewSchedule.IsInterviewPass == null;
                                <tr>
                                    <td>@FormatHelper.FormatDate(interviewSchedule.InterviewDate)</td>
                                    <td>@string.Format("{0:hh\\:mm}", interviewSchedule.InterviewTime)</td>
                                    <td class="text-nowrap">
                                        <table class="table table-bordered table-hover table-sm table-in-table">
                                            <thead>
                                                <tr>
                                                    <th class="font-weight-normal"></th>
                                                    <th class="font-weight-normal">Candidate</th>
                                                    @if (operators.Count() > 0)
                                                    {
                                                        foreach (var op in operators)
                                                        {
                                                            <th class="@(signedInOperator != null && signedInOperator.OperatorId == op.OperatorId ? "" : "font-weight-normal")">@op.OperatorName</th>
                                                        }
                                                    }
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var applyDetailAbility in applyDetailAbilities)
                                                {
                                                    <tr>
                                                        <td>@applyDetailAbility.Ability.AbilityName</td>
                                                        <td>
                                                            <div class="progress" style="height: 12px;">
                                                                <div class="progress-bar bg-info" role="progressbar" style="width: @(applyDetailAbility.Point * 10)%;">@applyDetailAbility.Point</div>
                                                            </div>
                                                        </td>
                                                        @if (operators.Count() > 0)
                                                        {
                                                            foreach (var op in operators)
                                                            {
                                                                var interviewResult = op.InterviewResult.FirstOrDefault(ir => ir.ApplyDetailAbilityId == applyDetailAbility.ApplyDetailAbilityId);
                                                                <th>
                                                                    <div class="progress" style="height: 12px;">
                                                                        <div class="progress-bar bg-info" role="progressbar" style="width: @(interviewResult.Point * 10)%;">@interviewResult.Point</div>
                                                                    </div>
                                                                </th>
                                                            }
                                                        }
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </td>
                                    <td class="text-center">
                                        @if (interviewSchedule.IsEmailSent == true)
                                        {
                                            <p class="badge badge-success d-block">Yes</p>
                                        }
                                        else
                                        {
                                            <p class="badge badge-danger d-block">No</p>
                                        }
                                    </td>
                                    <td class="text-center">
                                        <div class="d-flex justify-content-center">
                                            <button class="btn btn-link text-primary font-weight-bold btn-sm" onclick="ShowMarkAbilityModal(@Model.ApplyDetail.ApplyDetailId, @interviewSchedule.InterviewId);" disabled="@(!canMarkAbility)">Mark Ability</button>

                                            <button class="btn btn-link text-info font-weight-bold btn-sm" onclick="ShowEditInterviewModal(@Model.ApplyDetail.ApplyDetailId, @interviewSchedule.InterviewId);">Edit</button>

                                            <form class="mx-1" asp-controller="Admin" asp-action="DeleteInterview" asp-route-id="@interviewSchedule.InterviewId" method="post">
                                                <button class="btn btn-link text-danger font-weight-bold btn-sm" type="submit" onclick="return confirm('Are you sure?');" disabled="@(!canDelete)">Delete</button>
                                            </form>
                                        </div>
                                    </td>
                                    <td class="text-center">
                                        @{

                                            if (interviewSchedule.IsInterviewPass == null)
                                            {
                                                <div>
                                                    <p class="badge badge-primary my-auto d-block">@(hasMarkedAbility ? "Not Evaluate" : "Not Mark All Ability")</p>
                                                    @if (canEvaluate && hasMarkedAbility)
                                                    {
                                                        <form class="d-inline" asp-controller="Admin" asp-action="UpdateInterviewStatus" asp-route-id="@interviewSchedule.InterviewId" asp-route-status="pass" method="post">
                                                            <a class="text-success font-weight-bold small" href="#" onclick="this.parentNode.submit(); return false;">Pass</a>
                                                        </form>
                                                        <form class="d-inline" asp-controller="Admin" asp-action="UpdateInterviewStatus" asp-route-id="@interviewSchedule.InterviewId" asp-route-status="fail" method="post">
                                                            <a class="text-danger font-weight-bold small" href="#" onclick="this.parentNode.submit(); return false;">Fail</a>
                                                        </form>
                                                    }

                                                </div>
                                            }
                                            if (interviewSchedule.IsInterviewPass == true)
                                            {
                                                <div>
                                                    <p class="badge badge-success my-auto d-block">Passed</p>
                                                    @if (canEvaluate)
                                                    {
                                                        <form class="d-inline" asp-controller="Admin" asp-action="UpdateInterviewStatus" asp-route-id="@interviewSchedule.InterviewId" asp-route-status="fail" method="post">
                                                            <a class="text-danger font-weight-bold small" href="#" onclick="this.parentNode.submit(); return false;">Fail</a>
                                                        </form>
                                                        <form class="d-inline" asp-controller="Admin" asp-action="UpdateInterviewStatus" asp-route-id="@interviewSchedule.InterviewId" asp-route-status="null" method="post">
                                                            <a class="text-info font-weight-bold small" href="#" onclick="this.parentNode.submit(); return false;">Reset</a>
                                                        </form>
                                                    }

                                                </div>
                                            }
                                            if (interviewSchedule.IsInterviewPass == false)
                                            {
                                                <div>
                                                    <p class="badge badge-danger my-auto d-block">Failed</p>
                                                    @if (canEvaluate)
                                                    {
                                                        <form class="d-inline" asp-controller="Admin" asp-action="UpdateInterviewStatus" asp-route-id="@interviewSchedule.InterviewId" asp-route-status="pass" method="post">
                                                            <a class="text-success font-weight-bold small" href="#" onclick="this.parentNode.submit(); return false;">Pass</a>
                                                        </form>
                                                        <form class="d-inline" asp-controller="Admin" asp-action="UpdateInterviewStatus" asp-route-id="@interviewSchedule.InterviewId" asp-route-status="null" method="post">
                                                            <a class="text-info font-weight-bold small" href="#" onclick="this.parentNode.submit(); return false;">Reset</a>
                                                        </form>
                                                    }
                                                </div>
                                            }
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>
        </div>
    </div>
</div>

